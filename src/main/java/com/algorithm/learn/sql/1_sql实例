一、环境
mysql 5.7

二、建表
1.建表
use mydb;

CREATE TABLE `t_dept` (
 `id` INT(11) NOT NULL AUTO_INCREMENT,
 `deptName` VARCHAR(30) DEFAULT NULL,
 `address` VARCHAR(40) DEFAULT NULL,
 PRIMARY KEY (`id`)
) ENGINE=INNODB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
CREATE TABLE `t_emp` (
 `id` INT(11) NOT NULL AUTO_INCREMENT,
 `name` VARCHAR(20) DEFAULT NULL,
  `age` INT(3) DEFAULT NULL,
 `deptId` INT(11) DEFAULT NULL,
empno int  not null,
 PRIMARY KEY (`id`),
 KEY `idx_dept_id` (`deptId`)
 #CONSTRAINT `fk_dept_id` FOREIGN KEY (`deptId`) REFERENCES `t_dept` (`id`)
) ENGINE=INNODB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
INSERT INTO t_dept(deptName,address) VALUES('华山','华山');
INSERT INTO t_dept(deptName,address) VALUES('丐帮','洛阳');
INSERT INTO t_dept(deptName,address) VALUES('峨眉','峨眉山');
INSERT INTO t_dept(deptName,address) VALUES('武当','武当山');
INSERT INTO t_dept(deptName,address) VALUES('明教','光明顶');
 INSERT INTO t_dept(deptName,address) VALUES('少林','少林寺');
INSERT INTO t_emp(NAME,age,deptId,empno) VALUES('风清扬',90,1,100001);
INSERT INTO t_emp(NAME,age,deptId,empno) VALUES('岳不群',50,1,100002);
INSERT INTO t_emp(NAME,age,deptId,empno) VALUES('令狐冲',24,1,100003);
 INSERT INTO t_emp(NAME,age,deptId,empno) VALUES('洪七公',70,2,100004);
INSERT INTO t_emp(NAME,age,deptId,empno) VALUES('乔峰',35,2,100005);
INSERT INTO t_emp(NAME,age,deptId,empno) VALUES('灭绝师太',70,3,100006);
INSERT INTO t_emp(NAME,age,deptId,empno) VALUES('周芷若',20,3,100007);
INSERT INTO t_emp(NAME,age,deptId,empno) VALUES('张三丰',100,4,100008);
INSERT INTO t_emp(NAME,age,deptId,empno) VALUES('张无忌',25,5,100009);
INSERT INTO t_emp(NAME,age,deptId,empno) VALUES('韦小宝',18,null,100010);

2.查看
mysql> select * from t_dept;
+----+----------+-----------+------+
| id | deptName | address   | CEO  |
+----+----------+-----------+------+
|  1 | 华山     | 华山      |    2 |
|  2 | 丐帮     | 洛阳      |    4 |
|  3 | 峨眉     | 峨眉山    |    6 |
|  4 | 武当     | 武当山    |    8 |
|  5 | 明教     | 光明顶    |    9 |
|  6 | 少林     | 少林寺    | NULL |
+----+----------+-----------+------+
6 rows in set (0.00 sec)

mysql> select * from t_emp;
+----+--------------+------+--------+--------+
| id | name         | age  | deptId | empno  |
+----+--------------+------+--------+--------+
|  1 | 风清扬       |   90 |      1 | 100001 |
|  2 | 岳不群       |   50 |      1 | 100002 |
|  3 | 令狐冲       |   24 |      1 | 100003 |
|  4 | 洪七公       |   70 |      2 | 100004 |
|  5 | 乔峰         |   35 |      2 | 100005 |
|  6 | 灭绝师太     |   70 |      3 | 100006 |
|  7 | 周芷若       |   20 |      3 | 100007 |
|  8 | 张三丰       |  100 |      4 | 100008 |
|  9 | 张无忌       |   25 |      5 | 100009 |
| 10 | 韦小宝       |   18 |   NULL | 100010 |
+----+--------------+------+--------+--------+
10 rows in set (0.00 sec)

三、案例
1.所有有门派人员的信息（要求显示门派名称）
SELECT e.`name`,d.`deptName` FROM t_emp e INNER JOIN t_dept d ON e.`deptId`=d.`id`;
【自己：】
mysql> SELECT e.*,d.* from t_dept d left join t_emp e on d.id=e.deptId;
+------+--------------+------+--------+--------+----+----------+-----------+
| id   | name         | age  | deptId | empno  | id | deptName | address   |
+------+--------------+------+--------+--------+----+----------+-----------+
|    1 | 风清扬       |   90 |      1 | 100001 |  1 | 华山     | 华山      |
|    2 | 岳不群       |   50 |      1 | 100002 |  1 | 华山     | 华山      |
|    3 | 令狐冲       |   24 |      1 | 100003 |  1 | 华山     | 华山      |
|    4 | 洪七公       |   70 |      2 | 100004 |  2 | 丐帮     | 洛阳      |
|    5 | 乔峰         |   35 |      2 | 100005 |  2 | 丐帮     | 洛阳      |
|    6 | 灭绝师太     |   70 |      3 | 100006 |  3 | 峨眉     | 峨眉山    |
|    7 | 周芷若       |   20 |      3 | 100007 |  3 | 峨眉     | 峨眉山    |
|    8 | 张三丰       |  100 |      4 | 100008 |  4 | 武当     | 武当山    |
|    9 | 张无忌       |   25 |      5 | 100009 |  5 | 明教     | 光明顶    |
| NULL | NULL         | NULL |   NULL |   NULL |  6 | 少林     | 少林寺    |
+------+--------------+------+--------+--------+----+----------+-----------+
10 rows in set (0.00 sec)


2. 列出所有人员及其门派信息
SELECT e.`name`,d.`deptName` FROM t_emp e LEFT JOIN t_dept d ON e.`deptId`=d.`id`;
【测试：】
mysql> select *  from t_emp e left join t_dept d on e.deptId=d.id;
+----+--------------+------+--------+--------+------+----------+-----------+
| id | name         | age  | deptId | empno  | id   | deptName | address   |
+----+--------------+------+--------+--------+------+----------+-----------+
|  1 | 风清扬       |   90 |      1 | 100001 |    1 | 华山     | 华山      |
|  2 | 岳不群       |   50 |      1 | 100002 |    1 | 华山     | 华山      |
|  3 | 令狐冲       |   24 |      1 | 100003 |    1 | 华山     | 华山      |
|  4 | 洪七公       |   70 |      2 | 100004 |    2 | 丐帮     | 洛阳      |
|  5 | 乔峰         |   35 |      2 | 100005 |    2 | 丐帮     | 洛阳      |
|  6 | 灭绝师太     |   70 |      3 | 100006 |    3 | 峨眉     | 峨眉山    |
|  7 | 周芷若       |   20 |      3 | 100007 |    3 | 峨眉     | 峨眉山    |
|  8 | 张三丰       |  100 |      4 | 100008 |    4 | 武当     | 武当山    |
|  9 | 张无忌       |   25 |      5 | 100009 |    5 | 明教     | 光明顶    |
| 10 | 韦小宝       |   18 |   NULL | 100010 | NULL | NULL     | NULL      |
+----+--------------+------+--------+--------+------+----------+-----------+
10 rows in set (0.00 sec)
修改
mysql> select e.name,d.deptName  from t_emp e left join t_dept d on e.deptId=d.id;
+--------------+----------+
| name         | deptName |
+--------------+----------+
| 风清扬       | 华山     |
| 岳不群       | 华山     |
| 令狐冲       | 华山     |
| 洪七公       | 丐帮     |
| 乔峰         | 丐帮     |
| 灭绝师太     | 峨眉     |
| 周芷若       | 峨眉     |
| 张三丰       | 武当     |
| 张无忌       | 明教     |
| 韦小宝       | NULL     |
+--------------+----------+
10 rows in set (0.00 sec)

3. 列出所有门派
SELECT * FROM t_dept;
【测试：】
mysql> select *from t_dept;
+----+----------+-----------+
| id | deptName | address   |
+----+----------+-----------+
|  1 | 华山     | 华山      |
|  2 | 丐帮     | 洛阳      |
|  3 | 峨眉     | 峨眉山    |
|  4 | 武当     | 武当山    |
|  5 | 明教     | 光明顶    |
|  6 | 少林     | 少林寺    |
+----+----------+-----------+
6 rows in set (0.00 sec)

4. 所有无门派人士
SELECT * FROM t_emp WHERE deptId IS NULL;
【测试：】
select * from t_emp where deptId=null;
修改：
mysql> select * from t_emp where deptId is null;
+----+-----------+------+--------+--------+
| id | name      | age  | deptId | empno  |
+----+-----------+------+--------+--------+
| 10 | 韦小宝    |   18 |   NULL | 100010 |
+----+-----------+------+--------+--------+
1 row in set (0.00 sec)

5. 所有无人门派
mysql> SELECT d.* FROM  t_dept d LEFT JOIN t_emp e ON d.`id`=e.`deptId` WHERE e.`deptId` IS NULL;
+----+----------+-----------+
| id | deptName | address   |
+----+----------+-----------+
|  6 | 少林     | 少林寺    |
+----+----------+-----------+
1 row in set (0.00 sec)

【测试：】
mysql> select * from t_dept d left join t_emp e on d.id=e.deptId where e.name is null;
+----+----------+-----------+------+------+------+--------+-------+
| id | deptName | address   | id   | name | age  | deptId | empno |
+----+----------+-----------+------+------+------+--------+-------+
|  6 | 少林     | 少林寺    | NULL | NULL | NULL |   NULL |  NULL |
+----+----------+-----------+------+------+------+--------+-------+
1 row in set (0.00 sec)


6. 所有人员和门派的对应关系
mysql> SELECT * FROM t_emp e LEFT JOIN t_dept d ON e.`deptId`=d.`id`
    -> UNION
    -> SELECT * FROM t_emp e RIGHT JOIN t_dept d ON e.`deptId`=d.`id`;
+------+--------------+------+--------+--------+------+----------+-----------+
| id   | name         | age  | deptId | empno  | id   | deptName | address   |
+------+--------------+------+--------+--------+------+----------+-----------+
|    1 | 风清扬       |   90 |      1 | 100001 |    1 | 华山     | 华山      |
|    2 | 岳不群       |   50 |      1 | 100002 |    1 | 华山     | 华山      |
|    3 | 令狐冲       |   24 |      1 | 100003 |    1 | 华山     | 华山      |
|    4 | 洪七公       |   70 |      2 | 100004 |    2 | 丐帮     | 洛阳      |
|    5 | 乔峰         |   35 |      2 | 100005 |    2 | 丐帮     | 洛阳      |
|    6 | 灭绝师太     |   70 |      3 | 100006 |    3 | 峨眉     | 峨眉山    |
|    7 | 周芷若       |   20 |      3 | 100007 |    3 | 峨眉     | 峨眉山    |
|    8 | 张三丰       |  100 |      4 | 100008 |    4 | 武当     | 武当山    |
|    9 | 张无忌       |   25 |      5 | 100009 |    5 | 明教     | 光明顶    |
|   10 | 韦小宝       |   18 |   NULL | 100010 | NULL | NULL     | NULL      |
| NULL | NULL         | NULL |   NULL |   NULL |    6 | 少林     | 少林寺    |
+------+--------------+------+--------+--------+------+----------+-----------+
11 rows in set (0.00 sec)
【测试：没有做出来，没有理解题意。】



7. 所有没有入门派的人员和没人入的门派
SELECT * FROM t_emp e  LEFT JOIN t_dept d ON e.`deptId`=d.`id` WHERE e.deptId IS NULL
UNION
SELECT * FROM  t_dept d LEFT JOIN t_emp e ON d.`id`=e.`deptId` WHERE e.`deptId` IS NULL;
mysql> SELECT * FROM t_emp e  LEFT JOIN t_dept d ON e.`deptId`=d.`id` WHERE e.deptId IS NULL
    -> UNION
    -> SELECT * FROM  t_dept d LEFT JOIN t_emp e ON d.`id`=e.`deptId` WHERE e.`deptId` IS NULL;
+----+-----------+-----------+--------+--------+------+----------+---------+
| id | name      | age       | deptId | empno  | id   | deptName | address |
+----+-----------+-----------+--------+--------+------+----------+---------+
| 10 | 韦小宝    | 18        |   NULL | 100010 | NULL | NULL     | NULL    |
|  6 | 少林      | 少林寺    |   NULL | NULL   | NULL | NULL     | NULL    |
+----+-----------+-----------+--------+--------+------+----------+---------+

【测试：】【错误！】
mysql> select * from t_dept d left join t_emp e on d.id=e.deptId where e.deptId is null
    -> union
    -> select * from t_dept d right join t_emp e on d.id=e.deptId where d.id is null;
+------+----------+-----------+------+-----------+------+--------+--------+
| id   | deptName | address   | id   | name      | age  | deptId | empno  |
+------+----------+-----------+------+-----------+------+--------+--------+
|    6 | 少林     | 少林寺    | NULL | NULL      | NULL |   NULL |   NULL |
| NULL | NULL     | NULL      |   10 | 韦小宝    |   18 |   NULL | 100010 |
+------+----------+-----------+------+-----------+------+--------+--------+
2 rows in set (0.00 sec)
修改：请注意，UNION 内部的 SELECT 语句必须拥有相同数量的列。列也必须拥有相似的数据类型。同时，每条 SELECT 语句中的列的顺序必须相同。

select * from t_dept d left join t_emp e on d.id=e.deptId where e.deptId is null
union
select * from t_emp e left join t_dept d on d.id=e.deptId where d.id is null;

mysql> select * from t_dept d left join t_emp e on d.id=e.deptId where e.deptId is null
    -> union
    -> select * from t_emp e left join t_dept d on d.id=e.deptId where d.id is null;
+----+-----------+-----------+------+--------+------+--------+-------+
| id | deptName  | address   | id   | name   | age  | deptId | empno |
+----+-----------+-----------+------+--------+------+--------+-------+
|  6 | 少林      | 少林寺    | NULL | NULL   | NULL | NULL   | NULL  |
| 10 | 韦小宝    | 18        | NULL | 100010 | NULL | NULL   | NULL  |
+----+-----------+-----------+------+--------+------+--------+-------+
2 rows in set (0.00 sec)


8. 添加CEO字段
ALTER TABLE `t_dept`
add  CEO  INT(11)  ;
update t_dept set CEO=2 where id=1;
update t_dept set CEO=4 where id=2;
update t_dept set CEO=6 where id=3;
update t_dept set CEO=8 where id=4;
update t_dept set CEO=9 where id=5;

【测试：】
ALTER TABLE `t_dept`
add  CEO  INT(11)  ;
update t_dept set CEO=2 where id=1;
update t_dept set CEO=4 where id=2;
update t_dept set CEO=6 where id=3;
update t_dept set CEO=8 where id=4;
update t_dept set CEO=9 where id=5;


8.1 求各个门派对应的掌门人名称
SELECT d.deptName,e.name FROM t_dept d LEFT JOIN t_emp e ON d.ceo=e.id;
mysql> SELECT d.deptName,e.name FROM t_dept d LEFT JOIN t_emp e ON d.ceo=e.id;
+----------+--------------+
| deptName | name         |
+----------+--------------+
| 华山     | 岳不群       |
| 丐帮     | 洪七公       |
| 峨眉     | 灭绝师太     |
| 武当     | 张三丰       |
| 明教     | 张无忌       |
| 少林     | NULL         |
+----------+--------------+
6 rows in set (0.00 sec)
【测试】
select d.deptName,e.name from t_dept d left join t_emp e on d.id = e.deptId where d.CEO=e.id;
mysql> select d.deptName,e.name from t_dept d left join t_emp e on d.id = e.deptId where d.CEO=e.id;
+----------+--------------+
| deptName | name         |
+----------+--------------+
| 华山     | 岳不群       |
| 丐帮     | 洪七公       |
| 峨眉     | 灭绝师太     |
| 武当     | 张三丰       |
| 明教     | 张无忌       |
+----------+--------------+
5 rows in set (0.00 sec)
修改：多余过滤条件，可以直接在连接过程中国去掉
select d.deptName,e.name from t_dept d left join t_emp e on d.CEO = e.id;
mysql> select d.deptName,e.name from t_dept d left join t_emp e on d.CEO = e.id;
+----------+--------------+
| deptName | name         |
+----------+--------------+
| 华山     | 岳不群       |
| 丐帮     | 洪七公       |
| 峨眉     | 灭绝师太     |
| 武当     | 张三丰       |
| 明教     | 张无忌       |
| 少林     | NULL         |
+----------+--------------+
6 rows in set (0.00 sec)


8.2求所有当上掌门人的平均年龄
SELECT AVG(e.age) FROM t_dept d LEFT JOIN t_emp e ON d.ceo=e.id
mysql> SELECT AVG(e.age) FROM t_dept d LEFT JOIN t_emp e ON d.ceo=e.id;
+------------+
| AVG(e.age) |
+------------+
|    63.0000 |
+------------+
1 row in set (0.00 sec)

【测试：】
select  avg(e.age) from t_dept d left join t_emp e on d.CEO = e.id;
mysql> select  avg(e.age) from t_dept d left join t_emp e on d.CEO = e.id;
+------------+
| avg(e.age) |
+------------+
|    63.0000 |
+------------+
1 row in set (0.00 sec)

8.3求所有人物对应的掌门名称
SELECT ed.name '人物',c.name '掌门' FROM
(SELECT e.name,d.ceo from t_emp e LEFT JOIN t_dept d on e.deptid=d.id) ed
 LEFT JOIN t_emp c on ed.ceo= c.id;
SELECT e.name '人物',tmp.name '掌门'
FROM t_emp e LEFT JOIN (SELECT d.id did,e.name FROM t_dept d LEFT JOIN t_emp e ON d.ceo=e.id)tmp
ON e.deptId=tmp.did;
SELECT e1.name '人物',e2.name '掌门'
 FROM t_emp e1
 LEFT JOIN t_dept d on e1.deptid = d.id
 LEFT JOIN t_emp e2 on d.ceo = e2.id ;
SELECT e2.name '人物',
(SELECT e1.name FROM t_emp e1 where e1.id= d.ceo) '掌门'
 from t_emp e2 LEFT JOIN t_dept d on e2.deptid=d.id;